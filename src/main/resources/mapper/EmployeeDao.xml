<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tdkj.System.dao.EmployeeDao">

    <resultMap type="com.tdkj.System.entity.Employee" id="EmployeeMap">
        <result property="employeeid" column="EmployeeId" jdbcType="INTEGER"/>
        <result property="corpid" column="CorpId" jdbcType="INTEGER"/>
        <result property="departmentid" column="DepartmentId" jdbcType="INTEGER"/>
        <result property="superid" column="SuperID" jdbcType="INTEGER"/>
        <result property="name" column="Name" jdbcType="VARCHAR"/>
        <result property="jobtitle" column="JobTitle" jdbcType="VARCHAR"/>
        <result property="idcardtype" column="IdcardType" jdbcType="INTEGER"/>
        <result property="idcardnumber" column="IdcardNumber" jdbcType="VARCHAR"/>
        <result property="status" column="Status" jdbcType="INTEGER"/>
        <result property="gender" column="Gender" jdbcType="INTEGER"/>
        <result property="age" column="Age" jdbcType="INTEGER"/>
        <result property="nation" column="Nation" jdbcType="VARCHAR"/>
        <result property="edulevel" column="EduLevel" jdbcType="INTEGER"/>
        <result property="birthday" column="Birthday" jdbcType="OTHER"/>
        <result property="address" column="Address" jdbcType="VARCHAR"/>
        <result property="entrydate" column="EntryDate" jdbcType="OTHER"/>
        <result property="regulardate" column="RegularDate" jdbcType="OTHER"/>
        <result property="departuredate" column="DepartureDate" jdbcType="OTHER"/>
        <result property="headimageurl" column="HeadimageUrl" jdbcType="VARCHAR"/>
        <result property="politicstype" column="PoliticsType" jdbcType="INTEGER"/>
        <result property="cellphone" column="CellPhone" jdbcType="VARCHAR"/>
        <result property="email" column="Email" jdbcType="VARCHAR"/>
        <result property="authorizationcode" column="AuthorizationCode" jdbcType="VARCHAR"/>
        <result property="urgentlinkman" column="UrgentLinkMan" jdbcType="VARCHAR"/>
        <result property="urgentlinkmanphone" column="UrgentLinkManPhone" jdbcType="VARCHAR"/>
        <result property="positiveidcardimageurl" column="PositiveIdCardImageurl" jdbcType="VARCHAR"/>
        <result property="negativeidcardimageurl" column="NegativeIdCardImageurl" jdbcType="VARCHAR"/>
        <result property="fileinfoid" column="FileinfoId" jdbcType="INTEGER"/>
        <result property="createdate" column="CreateDate" jdbcType="TIMESTAMP"/>
        <result property="modifydate" column="ModifyDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EmployeeMap">
        select
          EmployeeId, CorpId, DepartmentId, SuperID, Name, JobTitle, IdcardType, IdcardNumber, Status, Gender, Age, Nation, EduLevel, Birthday, Address, EntryDate, RegularDate, DepartureDate, HeadimageUrl, PoliticsType, CellPhone, Email, AuthorizationCode, UrgentLinkMan, UrgentLinkManPhone, PositiveIdCardImageurl, NegativeIdCardImageurl, FileinfoId, CreateDate, ModifyDate
        from employee
        where EmployeeId = #{employeeid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmployeeMap">
        select
          EmployeeId, CorpId, DepartmentId, SuperID, Name, JobTitle, IdcardType, IdcardNumber, Status, Gender, Age, Nation, EduLevel, Birthday, Address, EntryDate, RegularDate, DepartureDate, HeadimageUrl, PoliticsType, CellPhone, Email, AuthorizationCode, UrgentLinkMan, UrgentLinkManPhone, PositiveIdCardImageurl, NegativeIdCardImageurl, FileinfoId, CreateDate, ModifyDate
        from employee
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="EmployeeMap">
        select
        EmployeeId, CorpId, DepartmentId, SuperID, Name, JobTitle, IdcardType, IdcardNumber, Status, Gender, Age,
        Nation, EduLevel, Birthday, Address, EntryDate, RegularDate, DepartureDate, HeadimageUrl, PoliticsType,
        CellPhone, Email, AuthorizationCode, UrgentLinkMan, UrgentLinkManPhone, PositiveIdCardImageurl,
        NegativeIdCardImageurl, FileinfoId, CreateDate, ModifyDate
        from employee
        <where>
            <if test="employeeid != null">
                and EmployeeId = #{employeeid}
            </if>
            <if test="corpid != null">
                and CorpId = #{corpid}
            </if>
            <if test="departmentid != null">
                and DepartmentId = #{departmentid}
            </if>
            <if test="superid != null">
                and SuperID = #{superid}
            </if>
            <if test="name != null and name != ''">
                and Name = #{name}
            </if>
            <if test="jobtitle != null and jobtitle != ''">
                and JobTitle = #{jobtitle}
            </if>
            <if test="idcardtype != null">
                and IdcardType = #{idcardtype}
            </if>
            <if test="idcardnumber != null and idcardnumber != ''">
                and IdcardNumber = #{idcardnumber}
            </if>
            <if test="status != null">
                and Status = #{status}
            </if>
            <if test="gender != null">
                and Gender = #{gender}
            </if>
            <if test="age != null">
                and Age = #{age}
            </if>
            <if test="nation != null and nation != ''">
                and Nation = #{nation}
            </if>
            <if test="edulevel != null">
                and EduLevel = #{edulevel}
            </if>
            <if test="birthday != null">
                and Birthday = #{birthday}
            </if>
            <if test="address != null and address != ''">
                and Address = #{address}
            </if>
            <if test="entrydate != null">
                and EntryDate = #{entrydate}
            </if>
            <if test="regulardate != null">
                and RegularDate = #{regulardate}
            </if>
            <if test="departuredate != null">
                and DepartureDate = #{departuredate}
            </if>
            <if test="headimageurl != null and headimageurl != ''">
                and HeadimageUrl = #{headimageurl}
            </if>
            <if test="politicstype != null">
                and PoliticsType = #{politicstype}
            </if>
            <if test="cellphone != null and cellphone != ''">
                and CellPhone = #{cellphone}
            </if>
            <if test="email != null and email != ''">
                and Email = #{email}
            </if>
            <if test="authorizationcode != null and authorizationcode != ''">
                and AuthorizationCode = #{authorizationcode}
            </if>
            <if test="urgentlinkman != null and urgentlinkman != ''">
                and UrgentLinkMan = #{urgentlinkman}
            </if>
            <if test="urgentlinkmanphone != null and urgentlinkmanphone != ''">
                and UrgentLinkManPhone = #{urgentlinkmanphone}
            </if>
            <if test="positiveidcardimageurl != null and positiveidcardimageurl != ''">
                and PositiveIdCardImageurl = #{positiveidcardimageurl}
            </if>
            <if test="negativeidcardimageurl != null and negativeidcardimageurl != ''">
                and NegativeIdCardImageurl = #{negativeidcardimageurl}
            </if>
            <if test="fileinfoid != null">
                and FileinfoId = #{fileinfoid}
            </if>
            <if test="createdate != null">
                and CreateDate = #{createdate}
            </if>
            <if test="modifydate != null">
                and ModifyDate = #{modifydate}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="employeeid" useGeneratedKeys="true">
        insert into employee(CorpId, DepartmentId, SuperID, Name, JobTitle, IdcardType, IdcardNumber, Status, Gender, Age, Nation, EduLevel, Birthday, Address, EntryDate, RegularDate, DepartureDate, HeadimageUrl, PoliticsType, CellPhone, Email, AuthorizationCode, UrgentLinkMan, UrgentLinkManPhone, PositiveIdCardImageurl, NegativeIdCardImageurl, FileinfoId, CreateDate, ModifyDate)
        values (#{corpid}, #{departmentid}, #{superid}, #{name}, #{jobtitle}, #{idcardtype}, #{idcardnumber}, #{status}, #{gender}, #{age}, #{nation}, #{edulevel}, #{birthday}, #{address}, #{entrydate}, #{regulardate}, #{departuredate}, #{headimageurl}, #{politicstype}, #{cellphone}, #{email}, #{authorizationcode}, #{urgentlinkman}, #{urgentlinkmanphone}, #{positiveidcardimageurl}, #{negativeidcardimageurl}, #{fileinfoid}, #{createdate}, #{modifydate})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update employee
        <set>
            <if test="corpid != null">
                CorpId = #{corpid},
            </if>
            <if test="departmentid != null">
                DepartmentId = #{departmentid},
            </if>
            <if test="superid != null">
                SuperID = #{superid},
            </if>
            <if test="name != null and name != ''">
                Name = #{name},
            </if>
            <if test="jobtitle != null and jobtitle != ''">
                JobTitle = #{jobtitle},
            </if>
            <if test="idcardtype != null">
                IdcardType = #{idcardtype},
            </if>
            <if test="idcardnumber != null and idcardnumber != ''">
                IdcardNumber = #{idcardnumber},
            </if>
            <if test="status != null">
                Status = #{status},
            </if>
            <if test="gender != null">
                Gender = #{gender},
            </if>
            <if test="age != null">
                Age = #{age},
            </if>
            <if test="nation != null and nation != ''">
                Nation = #{nation},
            </if>
            <if test="edulevel != null">
                EduLevel = #{edulevel},
            </if>
            <if test="birthday != null">
                Birthday = #{birthday},
            </if>
            <if test="address != null and address != ''">
                Address = #{address},
            </if>
            <if test="entrydate != null">
                EntryDate = #{entrydate},
            </if>
            <if test="regulardate != null">
                RegularDate = #{regulardate},
            </if>
            <if test="departuredate != null">
                DepartureDate = #{departuredate},
            </if>
            <if test="headimageurl != null and headimageurl != ''">
                HeadimageUrl = #{headimageurl},
            </if>
            <if test="politicstype != null">
                PoliticsType = #{politicstype},
            </if>
            <if test="cellphone != null and cellphone != ''">
                CellPhone = #{cellphone},
            </if>
            <if test="email != null and email != ''">
                Email = #{email},
            </if>
            <if test="authorizationcode != null and authorizationcode != ''">
                AuthorizationCode = #{authorizationcode},
            </if>
            <if test="urgentlinkman != null and urgentlinkman != ''">
                UrgentLinkMan = #{urgentlinkman},
            </if>
            <if test="urgentlinkmanphone != null and urgentlinkmanphone != ''">
                UrgentLinkManPhone = #{urgentlinkmanphone},
            </if>
            <if test="positiveidcardimageurl != null and positiveidcardimageurl != ''">
                PositiveIdCardImageurl = #{positiveidcardimageurl},
            </if>
            <if test="negativeidcardimageurl != null and negativeidcardimageurl != ''">
                NegativeIdCardImageurl = #{negativeidcardimageurl},
            </if>
            <if test="fileinfoid != null">
                FileinfoId = #{fileinfoid},
            </if>
            <if test="createdate != null">
                CreateDate = #{createdate},
            </if>
            <if test="modifydate != null">
                ModifyDate = #{modifydate},
            </if>
        </set>
        where EmployeeId = #{employeeid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from employee where EmployeeId = #{employeeid}
    </delete>

    <!--查询单个-->
    <select id="getName" resultType="java.lang.String">
        select Name from employee
        where EmployeeId = #{employeeid}
    </select>

    <!--查询公司所有人-->
    <select id="queryAllEmployee" resultType="com.tdkj.System.entity.VO.EmployeeVO">
        select e.EmployeeId as employeeid,
            e.CorpId as corpid,
            c.CorpName as  corpname,
            e.DepartmentId as  departmentid,
            d.DeptName as deptname,
            e.SuperID as superid,
            e.Name as name,
            e.JobTitle as jobtitle,
            e.IdcardType as idcardtype,
            e.IdcardNumber as idcardnumber,
            u.UserName as username,
            u.Status as userstatus,
            e.Status as status,
            e.Gender as gender,
            e.Age as age,
            e.Nation as nation,
            e.EduLevel as edulevel,
            e.Birthday	as birthday,
            e.Address as address,
            e.EntryDate as entrydate,
            e.RegularDate as regulardate,
            e.DepartureDate as departuredate,
            e.HeadimageUrl as headimageurl,
            e.PoliticsType as politicstype,
            e.CellPhone as cellphone,
            e.email as email,
            e.UrgentLinkMan as urgentlinkman,
            e.UrgentLinkManPhone as  urgentlinkmanphone,
            e.PositiveIdCardImageurl as positiveidcardimageurl,
            e.NegativeIdCardImageurl as negativeidcardimageurl,
            e.FileinfoId as fileinfoid,
            f.URL as fileUrl,
            e.CreateDate as createdate,
            e.ModifyDate as modifydate
        from employee e LEFT join corpbasicinfo c on e.CorpId =c.CorpId
        LEFT JOIN  department d on e.DepartmentId =d.DeptId
        LEFT JOIN fileinfo f on e.FileinfoId =f.FileInfoID
        LEFT JOIN user u on e.EmployeeId =u.EmployeeId
        <where>
            <if test="name != null and name != ''">
                and e.Name like concat('%',#{name},'%')
            </if>
            <if test="idcardnumber != null and idcardnumber != ''">
                and IdcardNumber like concat('%',#{idcardnumber},'%')
            </if>
            <if test="corpid != null and corpid != ''">
                and e.CorpId = #{corpid}
            </if>
        </where>
        order by  userstatus desc
    </select>

    <!--查询当前用户的部门ID-->
    <select id="queryByUserIdGetDeptID" resultType="java.lang.Integer">
        select DepartmentId from employee where EmployeeId = #{employeeid}
    </select>


    <!--根据用户ID获取上级领导信息-->
    <select id="querySuperById" resultMap="EmployeeMap">
        select
          EmployeeId, CorpId, DepartmentId, SuperID, Name, JobTitle, IdcardType, IdcardNumber, Status, Gender, Age, Nation, EduLevel, Birthday, Address, EntryDate, RegularDate, DepartureDate, HeadimageUrl, PoliticsType, CellPhone, Email, AuthorizationCode, UrgentLinkMan, UrgentLinkManPhone, PositiveIdCardImageurl, NegativeIdCardImageurl, FileinfoId, CreateDate, ModifyDate
        from employee
        where EmployeeId =(select SuperID from employee where EmployeeId= #{employeeid})
    </select>
    <!--根据用户ID获取角色信息-->
    <select id="queryemployeeByRoleid" resultMap="EmployeeMap">
         select * from employee e
         LEFT JOIN user u  on u.EmployeeId =e.EmployeeId
         where u.RoleId = #{roleid} and e.CorpID =#{corpid}
    </select>
    <!--根据公司ID获取该公司内的用户信息-->
    <select id="queryMyMail" resultType="com.tdkj.System.entity.VO.EmployeeVO">
            select
                e.name as name,
                d.DeptName as deptname,
                e.CellPhone as cellphone,
                e.Email as email,
                e.Address as address,
                e.JobTitle as jobtitle
            from employee e
             left join department d on d.DeptId = e.DepartmentId
        <where>
            <if test="name != null and name != ''">
                and Name like concat('%',#{name},'%')
            </if>
            <if test="cellphone != null and cellphone != ''">
                and cellphone like concat('%',#{cellphone},'%')
            </if>
            <if test="corpid != null and corpid != ''">
                and e.corpid = #{corpid}
            </if>
        </where>
    </select>


    <select id="queryAllMail" resultType="com.tdkj.System.entity.VO.EmployeeVO">
        select
        e.name as name,
        d.DeptName as deptname,
        e.CellPhone as cellphone,
        e.Email as email,
        e.Address as address,
        e.JobTitle as jobtitle,
        e.CorpID as corpid,
        c.CorpName as corpname
        from employee e
        left join department d on d.DeptId = e.DepartmentId
        left join corpbasicinfo c on c.CorpId = e.CorpId
        <where>
            <if test="name != null and name != ''">
                and Name like concat('%',#{name},'%')
            </if>
            <if test="cellphone != null and cellphone != ''">
                and cellphone like concat('%',#{cellphone},'%')
            </if>
        </where>
    </select>


    <select id="queryemployeeVOById" resultType="com.tdkj.System.entity.VO.EmployeeVO">
        select e.EmployeeId as employeeid,
            e.CorpId as corpid,
            c.CorpName as  corpname,
            e.DepartmentId as  departmentid,
            d.DeptName as deptname,
            e.SuperID as superid,
						u.UserName as username,
            e.Name as name,
            e.JobTitle as jobtitle,
            e.IdcardType as idcardtype,
            e.IdcardNumber as idcardnumber,
            u.Status as userstatus,
            e.Status as status,
            e.Gender as gender,
            e.Age as age,
            e.Nation as nation,
            e.EduLevel as edulevel,
            e.Birthday	as birthday,
            e.Address as address,
            e.EntryDate as entrydate,
            e.RegularDate as regulardate,
            e.DepartureDate as departuredate,
            e.HeadimageUrl as headimageurl,
            e.PoliticsType as politicstype,
            e.CellPhone as cellphone,
            e.email as email,
            e.UrgentLinkMan as urgentlinkman,
            e.UrgentLinkManPhone as  urgentlinkmanphone,
            e.PositiveIdCardImageurl as positiveidcardimageurl,
            e.NegativeIdCardImageurl as negativeidcardimageurl,
            e.FileinfoId as fileinfoid,
            f.URL as fileUrl,
            e.CreateDate as createdate,
            e.ModifyDate as modifydate
        from employee e LEFT join corpbasicinfo c on e.CorpId =c.CorpId
            LEFT JOIN  department d on e.DepartmentId =d.DeptId
            LEFT JOIN fileinfo f on e.FileinfoId =f.FileInfoID
            LEFT JOIN user u on e.EmployeeId =u.EmployeeId
						WHERE e.EmployeeId = #{employeeid}
    </select>


    <!--获取公司下所有员工 用于当司机所用-->
    <select id="queryByCorpID" resultType="com.tdkj.System.entity.VO.EmployeeVO">
        select e.EmployeeId as employeeid,
               e.Name as name
        from employee e LEFT join user u on e.EmployeeId =u.EmployeeId
						WHERE e.CorpId =#{corpid} and u.roleid =#{roleid}
    </select>


</mapper>