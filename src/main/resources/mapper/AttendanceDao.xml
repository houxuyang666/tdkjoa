<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tdkj.System.dao.AttendanceDao">

    <resultMap type="com.tdkj.System.entity.Attendance" id="AttendanceMap">
        <result property="attendanceid" column="AttendanceID" jdbcType="INTEGER"/>
        <result property="userid" column="UserID" jdbcType="INTEGER"/>
        <result property="deptid" column="DeptID" jdbcType="INTEGER"/>
        <result property="workdate" column="WorkDate" jdbcType="TIMESTAMP"/>
        <result property="closedate" column="CloseDate" jdbcType="TIMESTAMP"/>
        <result property="attendanceDesc" column="AttendanceDesc" jdbcType="VARCHAR"/>
        <result property="createdate" column="CreateDate" jdbcType="TIMESTAMP"/>
        <result property="modifydate" column="ModifyDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AttendanceMap">
        select
          AttendanceID, UserID, DeptID, WorkDate, CloseDate, AttendanceDesc, CreateDate, ModifyDate
        from attendance
        where AttendanceID = #{attendanceid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AttendanceMap">
        select
          AttendanceID, UserID, DeptID, WorkDate, CloseDate, AttendanceDesc, CreateDate, ModifyDate
        from attendance
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AttendanceMap">
        select
        AttendanceID, UserID, DeptID, WorkDate, CloseDate, AttendanceDesc, CreateDate, ModifyDate
        from attendance
        <where>
            <if test="attendanceid != null">
                and AttendanceID = #{attendanceid}
            </if>
            <if test="userid != null">
                and UserID = #{userid}
            </if>
            <if test="deptid != null">
                and DeptID = #{deptid}
            </if>
            <if test="workdate != null">
                and WorkDate = #{workdate}
            </if>
            <if test="closedate != null">
                and CloseDate = #{closedate}
            </if>
            <if test="attendanceDesc != null and attendanceDesc != ''">
                and AttendanceDesc = #{desc}
            </if>
            <if test="createdate != null">
                and CreateDate = #{createdate}
            </if>
            <if test="modifydate != null">
                and ModifyDate = #{modifydate}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="attendanceid" useGeneratedKeys="true">
        insert into attendance(UserID, DeptID, WorkDate, CloseDate, AttendanceDesc, CreateDate, ModifyDate)
        values (#{userid}, #{deptid}, #{workdate}, #{closedate}, #{attendanceDesc}, #{createdate}, #{modifydate})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update attendance
        <set>
            <if test="userid != null">
                UserID = #{userid},
            </if>
            <if test="deptid != null">
                DeptID = #{deptid},
            </if>
            <if test="workdate != null">
                WorkDate = #{workdate},
            </if>
            <if test="closedate != null">
                CloseDate = #{closedate},
            </if>
            <if test="attendanceDesc != null and attendanceDesc != ''">
                AttendanceDesc = #{attendanceDesc},
            </if>
            <if test="createdate != null">
                CreateDate = #{createdate},
            </if>
            <if test="modifydate != null">
                ModifyDate = #{modifydate},
            </if>
        </set>
        where AttendanceID = #{attendanceid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from attendance where AttendanceID = #{attendanceid}
    </delete>

    <!--查询今天是否签到-->
    <select id="queryByIdAndData" resultMap="AttendanceMap">
        select
          AttendanceID, UserID, DeptID, WorkDate, CloseDate, AttendanceDesc, CreateDate, ModifyDate
        from attendance
        where UserID = #{userid} and WorkDate BETWEEN concat(#{today},' 00:00:00') AND concat(#{today},' 23:59:59')
    </select>


    <select id="queryAllData" resultType="com.tdkj.System.entity.VO.AttendanceVO">
        select d.DeptName as deptname,
            e.name name,
            case when extract(day from a.WorkDate)=1 then a.attendanceDesc end  as day1,
            case when extract(day from a.WorkDate)=2 then a.attendanceDesc end  as day2,
            case when extract(day from a.WorkDate)=3 then a.attendanceDesc end  as day3,
            case when extract(day from a.WorkDate)=4 then a.attendanceDesc end  as day4,
            case when extract(day from a.WorkDate)=5 then a.attendanceDesc end  as day5,
            case when extract(day from a.WorkDate)=6 then a.attendanceDesc end  as day6,
            case when extract(day from a.WorkDate)=7 then a.attendanceDesc end  as day7,
            case when extract(day from a.WorkDate)=8 then a.attendanceDesc end  as day8,
            case when extract(day from a.WorkDate)=9 then a.attendanceDesc end  as day9,
            case when extract(day from a.WorkDate)=10 then a.attendanceDesc end  as day10,
            case when extract(day from a.WorkDate)=11 then a.attendanceDesc end  as day11,
            case when extract(day from a.WorkDate)=12 then a.attendanceDesc end  as day12,
            case when extract(day from a.WorkDate)=13 then a.attendanceDesc end  as day13,
            case when extract(day from a.WorkDate)=14 then a.attendanceDesc end  as day14,
            case when extract(day from a.WorkDate)=15 then a.attendanceDesc end  as day15,
            case when extract(day from a.WorkDate)=16 then a.attendanceDesc end  as day16,
            case when extract(day from a.WorkDate)=17 then a.attendanceDesc end  as day17,
            case when extract(day from a.WorkDate)=18 then a.attendanceDesc end  as day18,
            case when extract(day from a.WorkDate)=19 then a.attendanceDesc end  as day19,
            case when extract(day from a.WorkDate)=20 then a.attendanceDesc end  as day20,
            case when extract(day from a.WorkDate)=21 then a.attendanceDesc end  as day21,
            case when extract(day from a.WorkDate)=22 then a.attendanceDesc end  as day22,
            case when extract(day from a.WorkDate)=23 then a.attendanceDesc end  as day23,
            case when extract(day from a.WorkDate)=24 then a.attendanceDesc end  as day24,
            case when extract(day from a.WorkDate)=25 then a.attendanceDesc end  as day25,
            case when extract(day from a.WorkDate)=26 then a.attendanceDesc end  as day26,
            case when extract(day from a.WorkDate)=27 then a.attendanceDesc end  as day27,
            case when extract(day from a.WorkDate)=28 then a.attendanceDesc end  as day28,
            case when extract(day from a.WorkDate)=29 then a.attendanceDesc end  as day29,
            case when extract(day from a.WorkDate)=30 then a.attendanceDesc end  as day30,
            case when extract(day from a.WorkDate)=31 then a.attendanceDesc end  as day31
        from attendance a LEFT JOIN  user u on a.UserID =u.userid
                          LEFT JOIN employee e  on e.EmployeeId =u.EmployeeId
                          LEFT JOIN department d on d.DeptId =a.DeptId
                          where  extract(year from a.WorkDate)=#{year}
                          and    extract(month from a.WorkDate)=#{month}
                          and   a.CorpID =#{corpid}
                        <if test="name != null and name != ''">
                            and e.name like concat('%',#{name},'%')
                        </if>
                        group by e.name
    </select>











</mapper>